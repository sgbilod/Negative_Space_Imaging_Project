{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\fontTools\\ufoLib\\kerning.py",
  "classes": [],
  "functions": [
    {
      "name": "lookupKerningValue",
      "docstring": "Retrieve the kerning value (if any) between a pair of elements.\n\nThe elments can be either individual glyphs (by name) or kerning\ngroups (by name), or any combination of the two.\n\nArgs:\n  pair:\n      A tuple, in logical order (first, second) with respect\n      to the reading direction, to query the font for kerning\n      information on. Each element in the tuple can be either\n      a glyph name or a kerning group name.\n  kerning:\n      A dictionary of kerning pairs.\n  groups:\n      A set of kerning groups.\n  fallback:\n      The fallback value to return if no kern is found between\n      the elements in ``pair``. Defaults to 0.\n  glyphToFirstGroup:\n      A dictionary mapping glyph names to the first-glyph kerning\n      groups to which they belong. Defaults to ``None``.\n  glyphToSecondGroup:\n      A dictionary mapping glyph names to the second-glyph kerning\n      groups to which they belong. Defaults to ``None``.\n\nReturns:\n  The kerning value between the element pair. If no kerning for\n  the pair is found, the fallback value is returned.\n\nNote: This function expects the ``kerning`` argument to be a flat\ndictionary of kerning pairs, not the nested structure used in a\nkerning.plist file.\n\nExamples::\n\n  >>> groups = {\n  ...     \"public.kern1.O\" : [\"O\", \"D\", \"Q\"],\n  ...     \"public.kern2.E\" : [\"E\", \"F\"]\n  ... }\n  >>> kerning = {\n  ...     (\"public.kern1.O\", \"public.kern2.E\") : -100,\n  ...     (\"public.kern1.O\", \"F\") : -200,\n  ...     (\"D\", \"F\") : -300\n  ... }\n  >>> lookupKerningValue((\"D\", \"F\"), kerning, groups)\n  -300\n  >>> lookupKerningValue((\"O\", \"F\"), kerning, groups)\n  -200\n  >>> lookupKerningValue((\"O\", \"E\"), kerning, groups)\n  -100\n  >>> lookupKerningValue((\"O\", \"O\"), kerning, groups)\n  0\n  >>> lookupKerningValue((\"E\", \"E\"), kerning, groups)\n  0\n  >>> lookupKerningValue((\"E\", \"O\"), kerning, groups)\n  0\n  >>> lookupKerningValue((\"X\", \"X\"), kerning, groups)\n  0\n  >>> lookupKerningValue((\"public.kern1.O\", \"public.kern2.E\"),\n  ...     kerning, groups)\n  -100\n  >>> lookupKerningValue((\"public.kern1.O\", \"F\"), kerning, groups)\n  -200\n  >>> lookupKerningValue((\"O\", \"public.kern2.E\"), kerning, groups)\n  -100\n  >>> lookupKerningValue((\"public.kern1.X\", \"public.kern2.X\"), kerning, groups)\n  0"
    }
  ],
  "innovations": []
}