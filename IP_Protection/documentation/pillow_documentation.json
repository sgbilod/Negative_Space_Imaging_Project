{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\imageio\\plugins\\pillow.py",
  "classes": [
    {
      "name": "PillowPlugin",
      "docstring": null,
      "methods": [
        {
          "name": "__init__",
          "docstring": "Instantiate a new Pillow Plugin Object\n\nParameters\n----------\nrequest : {Request}\n    A request object representing the resource to be operated on."
        },
        {
          "name": "close",
          "docstring": null
        },
        {
          "name": "read",
          "docstring": "Parses the given URI and creates a ndarray from it.\n\nParameters\n----------\nindex : int\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return it.\n    If index is an ellipsis (...), read all ndimages in the file and\n    stack them along a new batch dimension and return them. If index is\n    None, this plugin reads the first image of the file (index=0) unless\n    the image is a GIF or APNG, in which case all images are read\n    (index=...).\nmode : str\n    Convert the image to the given mode before returning it. If None,\n    the mode will be left unchanged. Possible modes can be found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nrotate : bool\n    If True and the image contains an EXIF orientation tag,\n    apply the orientation before returning the ndimage.\napply_gamma : bool\n    If True and the image contains metadata about gamma, apply gamma\n    correction to the image.\nwritable_output : bool\n    If True, ensure that the image is writable before returning it to\n    the user. This incurs a full copy of the pixel data if the data\n    served by pillow is read-only. Consequentially, setting this flag to\n    False improves performance for some images.\npilmode : str\n    Deprecated, use `mode` instead.\nexifrotate : bool\n    Deprecated, use `rotate` instead.\nas_gray : bool\n    Deprecated. Exists to raise a constructive error message.\n\nReturns\n-------\nndimage : ndarray\n    A numpy array containing the loaded image data\n\nNotes\n-----\nIf you read a paletted image (e.g. GIF) then the plugin will apply the\npalette by default. Should you wish to read the palette indices of each\npixel use ``mode=\"P\"``. The coresponding color pallete can be found in\nthe image's metadata using the ``palette`` key when metadata is\nextracted using the ``exclude_applied=False`` kwarg. The latter is\nneeded, as palettes are applied by default and hence excluded by default\nto keep metadata and pixel data consistent."
        },
        {
          "name": "iter",
          "docstring": "Iterate over all ndimages/frames in the URI\n\nParameters\n----------\nmode : {str, None}\n    Convert the image to the given mode before returning it. If None,\n    the mode will be left unchanged. Possible modes can be found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nrotate : {bool}\n    If set to ``True`` and the image contains an EXIF orientation tag,\n    apply the orientation before returning the ndimage.\napply_gamma : {bool}\n    If ``True`` and the image contains metadata about gamma, apply gamma\n    correction to the image.\nwritable_output : bool\n    If True, ensure that the image is writable before returning it to\n    the user. This incurs a full copy of the pixel data if the data\n    served by pillow is read-only. Consequentially, setting this flag to\n    False improves performance for some images."
        },
        {
          "name": "write",
          "docstring": "Write an ndimage to the URI specified in path.\n\nIf the URI points to a file on the current host and the file does not\nyet exist it will be created. If the file exists already, it will be\nappended if possible; otherwise, it will be replaced.\n\nIf necessary, the image is broken down along the leading dimension to\nfit into individual frames of the chosen format. If the format doesn't\nsupport multiple frames, and IOError is raised.\n\nParameters\n----------\nimage : ndarray or list\n    The ndimage to write. If a list is given each element is expected to\n    be an ndimage.\nmode : str\n    Specify the image's color format. If None (default), the mode is\n    inferred from the array's shape and dtype. Possible modes can be\n    found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nformat : str\n    Optional format override. If omitted, the format to use is\n    determined from the filename extension. If a file object was used\n    instead of a filename, this parameter must always be used.\nis_batch : bool\n    Explicitly tell the writer that ``image`` is a batch of images\n    (True) or not (False). If None, the writer will guess this from the\n    provided ``mode`` or ``image.shape``. While the latter often works,\n    it may cause problems for small images due to aliasing of spatial\n    and color-channel axes.\nkwargs : ...\n    Extra arguments to pass to pillow. If a writer doesn't recognise an\n    option, it is silently ignored. The available options are described\n    in pillow's `image format documentation\n    <https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html>`_\n    for each writer.\n\nNotes\n-----\nWhen writing batches of very narrow (2-4 pixels wide) gray images set\nthe ``mode`` explicitly to avoid the batch being identified as a colored\nimage."
        },
        {
          "name": "get_meta",
          "docstring": null
        },
        {
          "name": "metadata",
          "docstring": "Read ndimage metadata.\n\nParameters\n----------\nindex : {integer, None}\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return its\n    metadata. If index is an ellipsis (...), read and return global\n    metadata. If index is None, this plugin reads metadata from the\n    first image of the file (index=0) unless the image is a GIF or APNG,\n    in which case global metadata is read (index=...).\nexclude_applied : bool\n    If True, exclude metadata fields that are applied to the image while\n    reading. For example, if the binary data contains a rotation flag,\n    the image is rotated by default and the rotation flag is excluded\n    from the metadata to avoid confusion.\n\nReturns\n-------\nmetadata : dict\n    A dictionary of format-specific metadata."
        },
        {
          "name": "properties",
          "docstring": "Standardized ndimage metadata\nParameters\n----------\nindex : int\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return its\n    properties. If index is an ellipsis (...), read and return the\n    properties of all ndimages in the file stacked along a new batch\n    dimension. If index is None, this plugin reads and returns the\n    properties of the first image (index=0) unless the image is a GIF or\n    APNG, in which case it reads and returns the properties all images\n    (index=...).\n\nReturns\n-------\nproperties : ImageProperties\n    A dataclass filled with standardized image metadata.\n\nNotes\n-----\nThis does not decode pixel data and is fast for large images."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "pillow_version",
      "docstring": null
    },
    {
      "name": "close",
      "docstring": null
    },
    {
      "name": "read",
      "docstring": "Parses the given URI and creates a ndarray from it.\n\nParameters\n----------\nindex : int\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return it.\n    If index is an ellipsis (...), read all ndimages in the file and\n    stack them along a new batch dimension and return them. If index is\n    None, this plugin reads the first image of the file (index=0) unless\n    the image is a GIF or APNG, in which case all images are read\n    (index=...).\nmode : str\n    Convert the image to the given mode before returning it. If None,\n    the mode will be left unchanged. Possible modes can be found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nrotate : bool\n    If True and the image contains an EXIF orientation tag,\n    apply the orientation before returning the ndimage.\napply_gamma : bool\n    If True and the image contains metadata about gamma, apply gamma\n    correction to the image.\nwritable_output : bool\n    If True, ensure that the image is writable before returning it to\n    the user. This incurs a full copy of the pixel data if the data\n    served by pillow is read-only. Consequentially, setting this flag to\n    False improves performance for some images.\npilmode : str\n    Deprecated, use `mode` instead.\nexifrotate : bool\n    Deprecated, use `rotate` instead.\nas_gray : bool\n    Deprecated. Exists to raise a constructive error message.\n\nReturns\n-------\nndimage : ndarray\n    A numpy array containing the loaded image data\n\nNotes\n-----\nIf you read a paletted image (e.g. GIF) then the plugin will apply the\npalette by default. Should you wish to read the palette indices of each\npixel use ``mode=\"P\"``. The coresponding color pallete can be found in\nthe image's metadata using the ``palette`` key when metadata is\nextracted using the ``exclude_applied=False`` kwarg. The latter is\nneeded, as palettes are applied by default and hence excluded by default\nto keep metadata and pixel data consistent."
    },
    {
      "name": "iter",
      "docstring": "Iterate over all ndimages/frames in the URI\n\nParameters\n----------\nmode : {str, None}\n    Convert the image to the given mode before returning it. If None,\n    the mode will be left unchanged. Possible modes can be found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nrotate : {bool}\n    If set to ``True`` and the image contains an EXIF orientation tag,\n    apply the orientation before returning the ndimage.\napply_gamma : {bool}\n    If ``True`` and the image contains metadata about gamma, apply gamma\n    correction to the image.\nwritable_output : bool\n    If True, ensure that the image is writable before returning it to\n    the user. This incurs a full copy of the pixel data if the data\n    served by pillow is read-only. Consequentially, setting this flag to\n    False improves performance for some images."
    },
    {
      "name": "write",
      "docstring": "Write an ndimage to the URI specified in path.\n\nIf the URI points to a file on the current host and the file does not\nyet exist it will be created. If the file exists already, it will be\nappended if possible; otherwise, it will be replaced.\n\nIf necessary, the image is broken down along the leading dimension to\nfit into individual frames of the chosen format. If the format doesn't\nsupport multiple frames, and IOError is raised.\n\nParameters\n----------\nimage : ndarray or list\n    The ndimage to write. If a list is given each element is expected to\n    be an ndimage.\nmode : str\n    Specify the image's color format. If None (default), the mode is\n    inferred from the array's shape and dtype. Possible modes can be\n    found at:\n    https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes\nformat : str\n    Optional format override. If omitted, the format to use is\n    determined from the filename extension. If a file object was used\n    instead of a filename, this parameter must always be used.\nis_batch : bool\n    Explicitly tell the writer that ``image`` is a batch of images\n    (True) or not (False). If None, the writer will guess this from the\n    provided ``mode`` or ``image.shape``. While the latter often works,\n    it may cause problems for small images due to aliasing of spatial\n    and color-channel axes.\nkwargs : ...\n    Extra arguments to pass to pillow. If a writer doesn't recognise an\n    option, it is silently ignored. The available options are described\n    in pillow's `image format documentation\n    <https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html>`_\n    for each writer.\n\nNotes\n-----\nWhen writing batches of very narrow (2-4 pixels wide) gray images set\nthe ``mode`` explicitly to avoid the batch being identified as a colored\nimage."
    },
    {
      "name": "get_meta",
      "docstring": null
    },
    {
      "name": "metadata",
      "docstring": "Read ndimage metadata.\n\nParameters\n----------\nindex : {integer, None}\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return its\n    metadata. If index is an ellipsis (...), read and return global\n    metadata. If index is None, this plugin reads metadata from the\n    first image of the file (index=0) unless the image is a GIF or APNG,\n    in which case global metadata is read (index=...).\nexclude_applied : bool\n    If True, exclude metadata fields that are applied to the image while\n    reading. For example, if the binary data contains a rotation flag,\n    the image is rotated by default and the rotation flag is excluded\n    from the metadata to avoid confusion.\n\nReturns\n-------\nmetadata : dict\n    A dictionary of format-specific metadata."
    },
    {
      "name": "properties",
      "docstring": "Standardized ndimage metadata\nParameters\n----------\nindex : int\n    If the ImageResource contains multiple ndimages, and index is an\n    integer, select the index-th ndimage from among them and return its\n    properties. If index is an ellipsis (...), read and return the\n    properties of all ndimages in the file stacked along a new batch\n    dimension. If index is None, this plugin reads and returns the\n    properties of the first image (index=0) unless the image is a GIF or\n    APNG, in which case it reads and returns the properties all images\n    (index=...).\n\nReturns\n-------\nproperties : ImageProperties\n    A dataclass filled with standardized image metadata.\n\nNotes\n-----\nThis does not decode pixel data and is fast for large images."
    }
  ],
  "innovations": []
}