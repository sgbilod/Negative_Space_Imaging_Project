{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\matplotlib\\tri\\_tricontour.py",
  "classes": [
    {
      "name": "TriContourSet",
      "docstring": "Create and store a set of contour lines or filled regions for\na triangular grid.\n\nThis class is typically not instantiated directly by the user but by\n`~.Axes.tricontour` and `~.Axes.tricontourf`.\n\n%(contour_set_attributes)s",
      "methods": [
        {
          "name": "__init__",
          "docstring": "Draw triangular grid contour lines or filled regions,\ndepending on whether keyword arg *filled* is False\n(default) or True.\n\nThe first argument of the initializer must be an `~.axes.Axes`\nobject.  The remaining arguments and keyword arguments\nare described in the docstring of `~.Axes.tricontour`."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "tricontour",
      "docstring": "%(_tricontour_doc)s\n\nlinewidths : float or array-like, default: :rc:`contour.linewidth`\n    The line width of the contour lines.\n\n    If a number, all levels will be plotted with this linewidth.\n\n    If a sequence, the levels in ascending order will be plotted with\n    the linewidths in the order specified.\n\n    If None, this falls back to :rc:`lines.linewidth`.\n\nlinestyles : {*None*, 'solid', 'dashed', 'dashdot', 'dotted'}, optional\n    If *linestyles* is *None*, the default is 'solid' unless the lines are\n    monochrome.  In that case, negative contours will take their linestyle\n    from :rc:`contour.negative_linestyle` setting.\n\n    *linestyles* can also be an iterable of the above strings specifying a\n    set of linestyles to be used. If this iterable is shorter than the\n    number of contour levels it will be repeated as necessary."
    },
    {
      "name": "tricontourf",
      "docstring": "%(_tricontour_doc)s\n\nhatches : list[str], optional\n    A list of crosshatch patterns to use on the filled areas.\n    If None, no hatching will be added to the contour.\n\nNotes\n-----\n`.tricontourf` fills intervals that are closed at the top; that is, for\nboundaries *z1* and *z2*, the filled region is::\n\n    z1 < Z <= z2\n\nexcept for the lowest interval, which is closed on both sides (i.e. it\nincludes the lowest value)."
    }
  ],
  "innovations": []
}