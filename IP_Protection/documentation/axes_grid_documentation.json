{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\mpl_toolkits\\axes_grid1\\axes_grid.py",
  "classes": [
    {
      "name": "CbarAxesBase",
      "docstring": null,
      "methods": [
        {
          "name": "__init__",
          "docstring": null
        },
        {
          "name": "colorbar",
          "docstring": null
        }
      ]
    },
    {
      "name": "Grid",
      "docstring": "A grid of Axes.\n\nIn Matplotlib, the Axes location (and size) is specified in normalized\nfigure coordinates. This may not be ideal for images that needs to be\ndisplayed with a given aspect ratio; for example, it is difficult to\ndisplay multiple images of a same size with some fixed padding between\nthem.  AxesGrid can be used in such case.\n\nAttributes\n----------\naxes_all : list of Axes\n    A flat list of Axes. Note that you can also access this directly\n    from the grid. The following is equivalent ::\n\n        grid[i] == grid.axes_all[i]\n        len(grid) == len(grid.axes_all)\n\naxes_column : list of list of Axes\n    A 2D list of Axes where the first index is the column. This results\n    in the usage pattern ``grid.axes_column[col][row]``.\naxes_row : list of list of Axes\n    A 2D list of Axes where the first index is the row. This results\n    in the usage pattern ``grid.axes_row[row][col]``.\naxes_llc : Axes\n    The Axes in the lower left corner.\nngrids : int\n    Number of Axes in the grid.",
      "methods": [
        {
          "name": "__init__",
          "docstring": "Parameters\n----------\nfig : `.Figure`\n    The parent figure.\nrect : (float, float, float, float), (int, int, int), int, or     `~.SubplotSpec`\n    The axes position, as a ``(left, bottom, width, height)`` tuple,\n    as a three-digit subplot position code (e.g., ``(1, 2, 1)`` or\n    ``121``), or as a `~.SubplotSpec`.\nnrows_ncols : (int, int)\n    Number of rows and columns in the grid.\nngrids : int or None, default: None\n    If not None, only the first *ngrids* axes in the grid are created.\ndirection : {\"row\", \"column\"}, default: \"row\"\n    Whether axes are created in row-major (\"row by row\") or\n    column-major order (\"column by column\").  This also affects the\n    order in which axes are accessed using indexing (``grid[index]``).\naxes_pad : float or (float, float), default: 0.02\n    Padding or (horizontal padding, vertical padding) between axes, in\n    inches.\nshare_all : bool, default: False\n    Whether all axes share their x- and y-axis.  Overrides *share_x*\n    and *share_y*.\nshare_x : bool, default: True\n    Whether all axes of a column share their x-axis.\nshare_y : bool, default: True\n    Whether all axes of a row share their y-axis.\nlabel_mode : {\"L\", \"1\", \"all\", \"keep\"}, default: \"L\"\n    Determines which axes will get tick labels:\n\n    - \"L\": All axes on the left column get vertical tick labels;\n      all axes on the bottom row get horizontal tick labels.\n    - \"1\": Only the bottom left axes is labelled.\n    - \"all\": All axes are labelled.\n    - \"keep\": Do not do anything.\n\naxes_class : subclass of `matplotlib.axes.Axes`, default: `.mpl_axes.Axes`\n    The type of Axes to create.\naspect : bool, default: False\n    Whether the axes aspect ratio follows the aspect ratio of the data\n    limits."
        },
        {
          "name": "get_geometry",
          "docstring": "Return the number of rows and columns of the grid as (nrows, ncols)."
        },
        {
          "name": "set_axes_pad",
          "docstring": "Set the padding between the axes.\n\nParameters\n----------\naxes_pad : (float, float)\n    The padding (horizontal pad, vertical pad) in inches."
        },
        {
          "name": "get_axes_pad",
          "docstring": "Return the axes padding.\n\nReturns\n-------\nhpad, vpad\n    Padding (horizontal pad, vertical pad) in inches."
        },
        {
          "name": "set_aspect",
          "docstring": "Set the aspect of the SubplotDivider."
        },
        {
          "name": "get_aspect",
          "docstring": "Return the aspect of the SubplotDivider."
        },
        {
          "name": "set_label_mode",
          "docstring": "Define which axes have tick labels.\n\nParameters\n----------\nmode : {\"L\", \"1\", \"all\", \"keep\"}\n    The label mode:\n\n    - \"L\": All axes on the left column get vertical tick labels;\n      all axes on the bottom row get horizontal tick labels.\n    - \"1\": Only the bottom left axes is labelled.\n    - \"all\": All axes are labelled.\n    - \"keep\": Do not do anything."
        },
        {
          "name": "get_divider",
          "docstring": null
        },
        {
          "name": "set_axes_locator",
          "docstring": null
        },
        {
          "name": "get_axes_locator",
          "docstring": null
        }
      ]
    },
    {
      "name": "ImageGrid",
      "docstring": "A grid of Axes for Image display.\n\nThis class is a specialization of `~.axes_grid1.axes_grid.Grid` for displaying a\ngrid of images.  In particular, it forces all axes in a column to share their x-axis\nand all axes in a row to share their y-axis.  It further provides helpers to add\ncolorbars to some or all axes.",
      "methods": [
        {
          "name": "__init__",
          "docstring": "Parameters\n----------\nfig : `.Figure`\n    The parent figure.\nrect : (float, float, float, float) or int\n    The axes position, as a ``(left, bottom, width, height)`` tuple or\n    as a three-digit subplot position code (e.g., \"121\").\nnrows_ncols : (int, int)\n    Number of rows and columns in the grid.\nngrids : int or None, default: None\n    If not None, only the first *ngrids* axes in the grid are created.\ndirection : {\"row\", \"column\"}, default: \"row\"\n    Whether axes are created in row-major (\"row by row\") or\n    column-major order (\"column by column\").  This also affects the\n    order in which axes are accessed using indexing (``grid[index]``).\naxes_pad : float or (float, float), default: 0.02in\n    Padding or (horizontal padding, vertical padding) between axes, in\n    inches.\nshare_all : bool, default: False\n    Whether all axes share their x- and y-axis.  Note that in any case,\n    all axes in a column share their x-axis and all axes in a row share\n    their y-axis.\naspect : bool, default: True\n    Whether the axes aspect ratio follows the aspect ratio of the data\n    limits.\nlabel_mode : {\"L\", \"1\", \"all\"}, default: \"L\"\n    Determines which axes will get tick labels:\n\n    - \"L\": All axes on the left column get vertical tick labels;\n      all axes on the bottom row get horizontal tick labels.\n    - \"1\": Only the bottom left axes is labelled.\n    - \"all\": all axes are labelled.\n\ncbar_mode : {\"each\", \"single\", \"edge\", None}, default: None\n    Whether to create a colorbar for \"each\" axes, a \"single\" colorbar\n    for the entire grid, colorbars only for axes on the \"edge\"\n    determined by *cbar_location*, or no colorbars.  The colorbars are\n    stored in the :attr:`cbar_axes` attribute.\ncbar_location : {\"left\", \"right\", \"bottom\", \"top\"}, default: \"right\"\ncbar_pad : float, default: None\n    Padding between the image axes and the colorbar axes.\n\n    .. versionchanged:: 3.10\n        ``cbar_mode=\"single\"`` no longer adds *axes_pad* between the axes\n        and the colorbar if the *cbar_location* is \"left\" or \"bottom\".\n\ncbar_size : size specification (see `.Size.from_any`), default: \"5%\"\n    Colorbar size.\ncbar_set_cax : bool, default: True\n    If True, each axes in the grid has a *cax* attribute that is bound\n    to associated *cbar_axes*.\naxes_class : subclass of `matplotlib.axes.Axes`, default: None"
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "colorbar",
      "docstring": null
    },
    {
      "name": "get_geometry",
      "docstring": "Return the number of rows and columns of the grid as (nrows, ncols)."
    },
    {
      "name": "set_axes_pad",
      "docstring": "Set the padding between the axes.\n\nParameters\n----------\naxes_pad : (float, float)\n    The padding (horizontal pad, vertical pad) in inches."
    },
    {
      "name": "get_axes_pad",
      "docstring": "Return the axes padding.\n\nReturns\n-------\nhpad, vpad\n    Padding (horizontal pad, vertical pad) in inches."
    },
    {
      "name": "set_aspect",
      "docstring": "Set the aspect of the SubplotDivider."
    },
    {
      "name": "get_aspect",
      "docstring": "Return the aspect of the SubplotDivider."
    },
    {
      "name": "set_label_mode",
      "docstring": "Define which axes have tick labels.\n\nParameters\n----------\nmode : {\"L\", \"1\", \"all\", \"keep\"}\n    The label mode:\n\n    - \"L\": All axes on the left column get vertical tick labels;\n      all axes on the bottom row get horizontal tick labels.\n    - \"1\": Only the bottom left axes is labelled.\n    - \"all\": All axes are labelled.\n    - \"keep\": Do not do anything."
    },
    {
      "name": "get_divider",
      "docstring": null
    },
    {
      "name": "set_axes_locator",
      "docstring": null
    },
    {
      "name": "get_axes_locator",
      "docstring": null
    }
  ],
  "innovations": []
}