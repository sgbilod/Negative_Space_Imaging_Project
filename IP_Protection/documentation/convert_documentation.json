{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\contourpy\\convert.py",
  "classes": [],
  "functions": [
    {
      "name": "convert_filled",
      "docstring": "Convert filled contours from one :class:`~.FillType` to another.\n\nArgs:\n    filled (sequence of arrays): Filled contour polygons to convert, such as those returned by\n        :meth:`.ContourGenerator.filled`.\n    fill_type_from (FillType or str): :class:`~.FillType` to convert from as enum or\n        string equivalent.\n    fill_type_to (FillType or str): :class:`~.FillType` to convert to as enum or string\n        equivalent.\n\nReturn:\n    Converted filled contour polygons.\n\nWhen converting non-chunked fill types (``FillType.OuterCode`` or ``FillType.OuterOffset``) to\nchunked ones, all polygons are placed in the first chunk. When converting in the other\ndirection, all chunk information is discarded. Converting a fill type that is not aware of the\nrelationship between outer boundaries and contained holes (``FillType.ChunkCombinedCode`` or\n``FillType.ChunkCombinedOffset``) to one that is will raise a ``ValueError``.\n\n.. versionadded:: 1.2.0"
    },
    {
      "name": "convert_lines",
      "docstring": "Convert contour lines from one :class:`~.LineType` to another.\n\nArgs:\n    lines (sequence of arrays): Contour lines to convert, such as those returned by\n        :meth:`.ContourGenerator.lines`.\n    line_type_from (LineType or str): :class:`~.LineType` to convert from as enum or\n        string equivalent.\n    line_type_to (LineType or str): :class:`~.LineType` to convert to as enum or string\n        equivalent.\n\nReturn:\n    Converted contour lines.\n\nWhen converting non-chunked line types (``LineType.Separate`` or ``LineType.SeparateCode``) to\nchunked ones (``LineType.ChunkCombinedCode``, ``LineType.ChunkCombinedOffset`` or\n``LineType.ChunkCombinedNan``), all lines are placed in the first chunk. When converting in the\nother direction, all chunk information is discarded.\n\n.. versionadded:: 1.2.0"
    },
    {
      "name": "convert_multi_filled",
      "docstring": "Convert multiple sets of filled contours from one :class:`~.FillType` to another.\n\nArgs:\n    multi_filled (nested sequence of arrays): Filled contour polygons to convert, such as those\n        returned by :meth:`.ContourGenerator.multi_filled`.\n    fill_type_from (FillType or str): :class:`~.FillType` to convert from as enum or\n        string equivalent.\n    fill_type_to (FillType or str): :class:`~.FillType` to convert to as enum or string\n        equivalent.\n\nReturn:\n    Converted sets filled contour polygons.\n\nWhen converting non-chunked fill types (``FillType.OuterCode`` or ``FillType.OuterOffset``) to\nchunked ones, all polygons are placed in the first chunk. When converting in the other\ndirection, all chunk information is discarded. Converting a fill type that is not aware of the\nrelationship between outer boundaries and contained holes (``FillType.ChunkCombinedCode`` or\n``FillType.ChunkCombinedOffset``) to one that is will raise a ``ValueError``.\n\n.. versionadded:: 1.3.0"
    },
    {
      "name": "convert_multi_lines",
      "docstring": "Convert multiple sets of contour lines from one :class:`~.LineType` to another.\n\nArgs:\n    multi_lines (nested sequence of arrays): Contour lines to convert, such as those returned by\n        :meth:`.ContourGenerator.multi_lines`.\n    line_type_from (LineType or str): :class:`~.LineType` to convert from as enum or\n        string equivalent.\n    line_type_to (LineType or str): :class:`~.LineType` to convert to as enum or string\n        equivalent.\n\nReturn:\n    Converted set of contour lines.\n\nWhen converting non-chunked line types (``LineType.Separate`` or ``LineType.SeparateCode``) to\nchunked ones (``LineType.ChunkCombinedCode``, ``LineType.ChunkCombinedOffset`` or\n``LineType.ChunkCombinedNan``), all lines are placed in the first chunk. When converting in the\nother direction, all chunk information is discarded.\n\n.. versionadded:: 1.3.0"
    }
  ],
  "innovations": []
}