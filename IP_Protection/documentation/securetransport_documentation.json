{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
  "classes": [
    {
      "name": "WrappedSocket",
      "docstring": "API-compatibility wrapper for Python's OpenSSL wrapped socket object.\n\nNote: _makefile_refs, _drop(), and _reuse() are needed for the garbage\ncollector of PyPy.",
      "methods": [
        {
          "name": "__init__",
          "docstring": null
        },
        {
          "name": "handshake",
          "docstring": "Actually performs the TLS handshake. This is run automatically by\nwrapped socket, and shouldn't be needed in user code."
        },
        {
          "name": "fileno",
          "docstring": null
        },
        {
          "name": "recv",
          "docstring": null
        },
        {
          "name": "recv_into",
          "docstring": null
        },
        {
          "name": "settimeout",
          "docstring": null
        },
        {
          "name": "gettimeout",
          "docstring": null
        },
        {
          "name": "send",
          "docstring": null
        },
        {
          "name": "sendall",
          "docstring": null
        },
        {
          "name": "shutdown",
          "docstring": null
        },
        {
          "name": "close",
          "docstring": null
        },
        {
          "name": "getpeercert",
          "docstring": null
        },
        {
          "name": "version",
          "docstring": null
        }
      ]
    },
    {
      "name": "SecureTransportContext",
      "docstring": "I am a wrapper class for the SecureTransport library, to translate the\ninterface of the standard library ``SSLContext`` object to calls into\nSecureTransport.",
      "methods": [
        {
          "name": "__init__",
          "docstring": null
        },
        {
          "name": "check_hostname",
          "docstring": "SecureTransport cannot have its hostname checking disabled. For more,\nsee the comment on getpeercert() in this file."
        },
        {
          "name": "check_hostname",
          "docstring": "SecureTransport cannot have its hostname checking disabled. For more,\nsee the comment on getpeercert() in this file."
        },
        {
          "name": "options",
          "docstring": null
        },
        {
          "name": "options",
          "docstring": null
        },
        {
          "name": "verify_mode",
          "docstring": null
        },
        {
          "name": "verify_mode",
          "docstring": null
        },
        {
          "name": "set_default_verify_paths",
          "docstring": null
        },
        {
          "name": "load_default_certs",
          "docstring": null
        },
        {
          "name": "set_ciphers",
          "docstring": null
        },
        {
          "name": "load_verify_locations",
          "docstring": null
        },
        {
          "name": "load_cert_chain",
          "docstring": null
        },
        {
          "name": "set_alpn_protocols",
          "docstring": "Sets the ALPN protocols that will later be set on the context.\n\nRaises a NotImplementedError if ALPN is not supported."
        },
        {
          "name": "wrap_socket",
          "docstring": null
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "inject_into_urllib3",
      "docstring": "Monkey-patch urllib3 with SecureTransport-backed SSL-support."
    },
    {
      "name": "extract_from_urllib3",
      "docstring": "Undo monkey-patching by :func:`inject_into_urllib3`."
    },
    {
      "name": "handshake",
      "docstring": "Actually performs the TLS handshake. This is run automatically by\nwrapped socket, and shouldn't be needed in user code."
    },
    {
      "name": "fileno",
      "docstring": null
    },
    {
      "name": "recv",
      "docstring": null
    },
    {
      "name": "recv_into",
      "docstring": null
    },
    {
      "name": "settimeout",
      "docstring": null
    },
    {
      "name": "gettimeout",
      "docstring": null
    },
    {
      "name": "send",
      "docstring": null
    },
    {
      "name": "sendall",
      "docstring": null
    },
    {
      "name": "shutdown",
      "docstring": null
    },
    {
      "name": "close",
      "docstring": null
    },
    {
      "name": "getpeercert",
      "docstring": null
    },
    {
      "name": "version",
      "docstring": null
    },
    {
      "name": "makefile",
      "docstring": null
    },
    {
      "name": "makefile",
      "docstring": null
    },
    {
      "name": "check_hostname",
      "docstring": "SecureTransport cannot have its hostname checking disabled. For more,\nsee the comment on getpeercert() in this file."
    },
    {
      "name": "check_hostname",
      "docstring": "SecureTransport cannot have its hostname checking disabled. For more,\nsee the comment on getpeercert() in this file."
    },
    {
      "name": "options",
      "docstring": null
    },
    {
      "name": "options",
      "docstring": null
    },
    {
      "name": "verify_mode",
      "docstring": null
    },
    {
      "name": "verify_mode",
      "docstring": null
    },
    {
      "name": "set_default_verify_paths",
      "docstring": null
    },
    {
      "name": "load_default_certs",
      "docstring": null
    },
    {
      "name": "set_ciphers",
      "docstring": null
    },
    {
      "name": "load_verify_locations",
      "docstring": null
    },
    {
      "name": "load_cert_chain",
      "docstring": null
    },
    {
      "name": "set_alpn_protocols",
      "docstring": "Sets the ALPN protocols that will later be set on the context.\n\nRaises a NotImplementedError if ALPN is not supported."
    },
    {
      "name": "wrap_socket",
      "docstring": null
    }
  ],
  "innovations": []
}