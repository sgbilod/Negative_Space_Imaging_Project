{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\fontTools\\pens\\explicitClosingLinePen.py",
  "classes": [
    {
      "name": "ExplicitClosingLinePen",
      "docstring": "A filter pen that adds an explicit lineTo to the first point of each closed\ncontour if the end point of the last segment is not already the same as the first point.\nOtherwise, it passes the contour through unchanged.\n\n>>> from pprint import pprint\n>>> from fontTools.pens.recordingPen import RecordingPen\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.lineTo((100, 0))\n>>> pen.lineTo((100, 100))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('lineTo', ((100, 0),)),\n ('lineTo', ((100, 100),)),\n ('lineTo', ((0, 0),)),\n ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.lineTo((100, 0))\n>>> pen.lineTo((100, 100))\n>>> pen.lineTo((0, 0))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('lineTo', ((100, 0),)),\n ('lineTo', ((100, 100),)),\n ('lineTo', ((0, 0),)),\n ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.curveTo((100, 0), (0, 100), (100, 100))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('curveTo', ((100, 0), (0, 100), (100, 100))),\n ('lineTo', ((0, 0),)),\n ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.curveTo((100, 0), (0, 100), (100, 100))\n>>> pen.lineTo((0, 0))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('curveTo', ((100, 0), (0, 100), (100, 100))),\n ('lineTo', ((0, 0),)),\n ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.curveTo((100, 0), (0, 100), (0, 0))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('curveTo', ((100, 0), (0, 100), (0, 0))),\n ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)), ('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.closePath()\n>>> pprint(rec.value)\n[('closePath', ())]\n>>> rec = RecordingPen()\n>>> pen = ExplicitClosingLinePen(rec)\n>>> pen.moveTo((0, 0))\n>>> pen.lineTo((100, 0))\n>>> pen.lineTo((100, 100))\n>>> pen.endPath()\n>>> pprint(rec.value)\n[('moveTo', ((0, 0),)),\n ('lineTo', ((100, 0),)),\n ('lineTo', ((100, 100),)),\n ('endPath', ())]",
      "methods": [
        {
          "name": "filterContour",
          "docstring": null
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "filterContour",
      "docstring": null
    }
  ],
  "innovations": []
}