{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\matplotlib\\_cm.py",
  "classes": [],
  "functions": [
    {
      "name": "cubehelix",
      "docstring": "Return custom data dictionary of (r, g, b) conversion functions, which can\nbe used with `.ColormapRegistry.register`, for the cubehelix color scheme.\n\nUnlike most other color schemes cubehelix was designed by D.A. Green to\nbe monotonically increasing in terms of perceived brightness.\nAlso, when printed on a black and white postscript printer, the scheme\nresults in a greyscale with monotonically increasing brightness.\nThis color scheme is named cubehelix because the (r, g, b) values produced\ncan be visualised as a squashed helix around the diagonal in the\n(r, g, b) color cube.\n\nFor a unit color cube (i.e. 3D coordinates for (r, g, b) each in the\nrange 0 to 1) the color scheme starts at (r, g, b) = (0, 0, 0), i.e. black,\nand finishes at (r, g, b) = (1, 1, 1), i.e. white. For some fraction *x*,\nbetween 0 and 1, the color is the corresponding grey value at that\nfraction along the black to white diagonal (x, x, x) plus a color\nelement. This color element is calculated in a plane of constant\nperceived intensity and controlled by the following parameters.\n\nParameters\n----------\ngamma : float, default: 1\n    Gamma factor emphasizing either low intensity values (gamma < 1), or\n    high intensity values (gamma > 1).\ns : float, default: 0.5 (purple)\n    The starting color.\nr : float, default: -1.5\n    The number of r, g, b rotations in color that are made from the start\n    to the end of the color scheme.  The default of -1.5 corresponds to ->\n    B -> G -> R -> B.\nh : float, default: 1\n    The hue, i.e. how saturated the colors are. If this parameter is zero\n    then the color scheme is purely a greyscale."
    }
  ],
  "innovations": []
}