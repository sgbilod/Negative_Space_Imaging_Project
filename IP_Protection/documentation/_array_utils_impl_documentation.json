{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\numpy\\lib\\_array_utils_impl.py",
  "classes": [],
  "functions": [
    {
      "name": "byte_bounds",
      "docstring": "Returns pointers to the end-points of an array.\n\nParameters\n----------\na : ndarray\n    Input array. It must conform to the Python-side of the array\n    interface.\n\nReturns\n-------\n(low, high) : tuple of 2 integers\n    The first integer is the first byte of the array, the second\n    integer is just past the last byte of the array.  If `a` is not\n    contiguous it will not use every byte between the (`low`, `high`)\n    values.\n\nExamples\n--------\n>>> import numpy as np\n>>> I = np.eye(2, dtype='f'); I.dtype\ndtype('float32')\n>>> low, high = np.lib.array_utils.byte_bounds(I)\n>>> high - low == I.size*I.itemsize\nTrue\n>>> I = np.eye(2); I.dtype\ndtype('float64')\n>>> low, high = np.lib.array_utils.byte_bounds(I)\n>>> high - low == I.size*I.itemsize\nTrue"
    }
  ],
  "innovations": []
}