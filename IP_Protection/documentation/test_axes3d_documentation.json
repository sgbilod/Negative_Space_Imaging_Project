{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\tests\\test_axes3d.py",
  "classes": [
    {
      "name": "TestVoxels",
      "docstring": null,
      "methods": [
        {
          "name": "test_simple",
          "docstring": null
        },
        {
          "name": "test_edge_style",
          "docstring": null
        },
        {
          "name": "test_named_colors",
          "docstring": "Test with colors set to a 3D object array of strings."
        },
        {
          "name": "test_rgb_data",
          "docstring": "Test with colors set to a 4d float array of rgb data."
        },
        {
          "name": "test_alpha",
          "docstring": null
        },
        {
          "name": "test_xyz",
          "docstring": null
        },
        {
          "name": "test_calling_conventions",
          "docstring": null
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "plot_cuboid",
      "docstring": null
    },
    {
      "name": "test_invisible_axes",
      "docstring": null
    },
    {
      "name": "test_grid_off",
      "docstring": null
    },
    {
      "name": "test_invisible_ticks_axis",
      "docstring": null
    },
    {
      "name": "test_axis_positions",
      "docstring": null
    },
    {
      "name": "test_aspects",
      "docstring": null
    },
    {
      "name": "test_aspects_adjust_box",
      "docstring": null
    },
    {
      "name": "test_axes3d_repr",
      "docstring": null
    },
    {
      "name": "test_axes3d_primary_views",
      "docstring": null
    },
    {
      "name": "test_bar3d",
      "docstring": null
    },
    {
      "name": "test_bar3d_colors",
      "docstring": null
    },
    {
      "name": "test_bar3d_shaded",
      "docstring": null
    },
    {
      "name": "test_bar3d_notshaded",
      "docstring": null
    },
    {
      "name": "test_bar3d_lightsource",
      "docstring": null
    },
    {
      "name": "test_contour3d",
      "docstring": null
    },
    {
      "name": "test_contour3d_extend3d",
      "docstring": null
    },
    {
      "name": "test_contourf3d",
      "docstring": null
    },
    {
      "name": "test_contourf3d_fill",
      "docstring": null
    },
    {
      "name": "test_contourf3d_extend",
      "docstring": null
    },
    {
      "name": "test_tricontour",
      "docstring": null
    },
    {
      "name": "test_contour3d_1d_input",
      "docstring": null
    },
    {
      "name": "test_lines3d",
      "docstring": null
    },
    {
      "name": "test_plot_scalar",
      "docstring": null
    },
    {
      "name": "test_invalid_line_data",
      "docstring": null
    },
    {
      "name": "test_mixedsubplots",
      "docstring": null
    },
    {
      "name": "test_tight_layout_text",
      "docstring": null
    },
    {
      "name": "test_scatter3d",
      "docstring": null
    },
    {
      "name": "test_scatter3d_color",
      "docstring": null
    },
    {
      "name": "test_scatter3d_linewidth",
      "docstring": null
    },
    {
      "name": "test_scatter3d_linewidth_modification",
      "docstring": null
    },
    {
      "name": "test_scatter3d_modification",
      "docstring": null
    },
    {
      "name": "test_scatter3d_sorting",
      "docstring": "Test that marker properties are correctly sorted."
    },
    {
      "name": "test_marker_draw_order_data_reversed",
      "docstring": "Test that the draw order does not depend on the data point order.\n\nFor the given viewing angle at azim=-50, the yellow marker should be in\nfront. For azim=130, the blue marker should be in front."
    },
    {
      "name": "test_marker_draw_order_view_rotated",
      "docstring": "Test that the draw order changes with the direction.\n\nIf we rotate *azim* by 180 degrees and exchange the colors, the plot\nplot should look the same again."
    },
    {
      "name": "test_plot_3d_from_2d",
      "docstring": null
    },
    {
      "name": "test_fill_between_quad",
      "docstring": null
    },
    {
      "name": "test_fill_between_polygon",
      "docstring": null
    },
    {
      "name": "test_surface3d",
      "docstring": null
    },
    {
      "name": "test_surface3d_label_offset_tick_position",
      "docstring": null
    },
    {
      "name": "test_surface3d_shaded",
      "docstring": null
    },
    {
      "name": "test_surface3d_masked",
      "docstring": null
    },
    {
      "name": "test_plot_scatter_masks",
      "docstring": null
    },
    {
      "name": "test_plot_surface_None_arg",
      "docstring": null
    },
    {
      "name": "test_surface3d_masked_strides",
      "docstring": null
    },
    {
      "name": "test_text3d",
      "docstring": null
    },
    {
      "name": "test_text3d_modification",
      "docstring": null
    },
    {
      "name": "test_trisurf3d",
      "docstring": null
    },
    {
      "name": "test_trisurf3d_shaded",
      "docstring": null
    },
    {
      "name": "test_wireframe3d",
      "docstring": null
    },
    {
      "name": "test_wireframe3dzerocstride",
      "docstring": null
    },
    {
      "name": "test_wireframe3dzerorstride",
      "docstring": null
    },
    {
      "name": "test_wireframe3dzerostrideraises",
      "docstring": null
    },
    {
      "name": "test_mixedsamplesraises",
      "docstring": null
    },
    {
      "name": "test_quiver3d",
      "docstring": null
    },
    {
      "name": "test_quiver3d_empty",
      "docstring": null
    },
    {
      "name": "test_quiver3d_masked",
      "docstring": null
    },
    {
      "name": "test_quiver3d_colorcoded",
      "docstring": null
    },
    {
      "name": "test_patch_modification",
      "docstring": null
    },
    {
      "name": "test_patch_collection_modification",
      "docstring": null
    },
    {
      "name": "test_poly3dcollection_verts_validation",
      "docstring": null
    },
    {
      "name": "test_poly3dcollection_closed",
      "docstring": null
    },
    {
      "name": "test_poly_collection_2d_to_3d_empty",
      "docstring": null
    },
    {
      "name": "test_poly3dcollection_alpha",
      "docstring": null
    },
    {
      "name": "test_add_collection3d_zs_array",
      "docstring": null
    },
    {
      "name": "test_add_collection3d_zs_scalar",
      "docstring": null
    },
    {
      "name": "test_line3dCollection_autoscaling",
      "docstring": null
    },
    {
      "name": "test_poly3dCollection_autoscaling",
      "docstring": null
    },
    {
      "name": "test_axes3d_labelpad",
      "docstring": null
    },
    {
      "name": "test_axes3d_cla",
      "docstring": null
    },
    {
      "name": "test_axes3d_rotated",
      "docstring": null
    },
    {
      "name": "test_plotsurface_1d_raises",
      "docstring": null
    },
    {
      "name": "test_proj_transform",
      "docstring": null
    },
    {
      "name": "test_proj_axes_cube",
      "docstring": null
    },
    {
      "name": "test_proj_axes_cube_ortho",
      "docstring": null
    },
    {
      "name": "test_world",
      "docstring": null
    },
    {
      "name": "test_autoscale",
      "docstring": null
    },
    {
      "name": "test_unautoscale",
      "docstring": null
    },
    {
      "name": "test_culling",
      "docstring": null
    },
    {
      "name": "test_axes3d_focal_length_checks",
      "docstring": null
    },
    {
      "name": "test_axes3d_focal_length",
      "docstring": null
    },
    {
      "name": "test_axes3d_ortho",
      "docstring": null
    },
    {
      "name": "test_axes3d_isometric",
      "docstring": null
    },
    {
      "name": "test_axlim_clip",
      "docstring": null
    },
    {
      "name": "test_invalid_axes_limits",
      "docstring": null
    },
    {
      "name": "test_line3d_set_get_data_3d",
      "docstring": null
    },
    {
      "name": "test_inverted",
      "docstring": null
    },
    {
      "name": "test_inverted_cla",
      "docstring": null
    },
    {
      "name": "test_ax3d_tickcolour",
      "docstring": null
    },
    {
      "name": "test_ticklabel_format",
      "docstring": null
    },
    {
      "name": "test_quiver3D_smoke",
      "docstring": null
    },
    {
      "name": "test_minor_ticks",
      "docstring": null
    },
    {
      "name": "test_errorbar3d_errorevery",
      "docstring": "Tests errorevery functionality for 3D errorbars."
    },
    {
      "name": "test_errorbar3d",
      "docstring": "Tests limits, color styling, and legend for 3D errorbars."
    },
    {
      "name": "test_stem3d",
      "docstring": null
    },
    {
      "name": "test_equal_box_aspect",
      "docstring": null
    },
    {
      "name": "test_colorbar_pos",
      "docstring": null
    },
    {
      "name": "test_inverted_zaxis",
      "docstring": null
    },
    {
      "name": "test_set_zlim",
      "docstring": null
    },
    {
      "name": "test_shared_view",
      "docstring": null
    },
    {
      "name": "test_shared_axes_retick",
      "docstring": null
    },
    {
      "name": "test_quaternion",
      "docstring": null
    },
    {
      "name": "test_rotate",
      "docstring": "Test rotating using the left mouse button."
    },
    {
      "name": "test_pan",
      "docstring": "Test mouse panning using the middle mouse button."
    },
    {
      "name": "test_toolbar_zoom_pan",
      "docstring": null
    },
    {
      "name": "test_scalarmap_update",
      "docstring": null
    },
    {
      "name": "test_subfigure_simple",
      "docstring": null
    },
    {
      "name": "test_computed_zorder",
      "docstring": null
    },
    {
      "name": "test_format_coord",
      "docstring": null
    },
    {
      "name": "test_get_axis_position",
      "docstring": null
    },
    {
      "name": "test_margins",
      "docstring": null
    },
    {
      "name": "test_margin_getters",
      "docstring": null
    },
    {
      "name": "test_margins_errors",
      "docstring": null
    },
    {
      "name": "test_text_3d",
      "docstring": null
    },
    {
      "name": "test_draw_single_lines_from_Nx1",
      "docstring": null
    },
    {
      "name": "test_pathpatch_3d",
      "docstring": null
    },
    {
      "name": "test_scatter_spiral",
      "docstring": null
    },
    {
      "name": "test_Poly3DCollection_get_path",
      "docstring": null
    },
    {
      "name": "test_Poly3DCollection_get_facecolor",
      "docstring": null
    },
    {
      "name": "test_Poly3DCollection_get_edgecolor",
      "docstring": null
    },
    {
      "name": "test_view_init_vertical_axis",
      "docstring": "Test the actual projection, axis lines and ticks matches expected values.\n\nParameters\n----------\nvertical_axis : str\n    Axis to align vertically.\nproj_expected : ndarray\n    Expected values from ax.get_proj().\naxis_lines_expected : tuple of arrays\n    Edgepoints of the axis line. Expected values retrieved according\n    to ``ax.get_[xyz]axis().line.get_data()``.\ntickdirs_expected : list of int\n    indexes indicating which axis to create a tick line along."
    },
    {
      "name": "test_on_move_vertical_axis",
      "docstring": "Test vertical axis is respected when rotating the plot interactively."
    },
    {
      "name": "test_set_box_aspect_vertical_axis",
      "docstring": null
    },
    {
      "name": "test_arc_pathpatch",
      "docstring": null
    },
    {
      "name": "test_panecolor_rcparams",
      "docstring": null
    },
    {
      "name": "test_mutating_input_arrays_y_and_z",
      "docstring": "Test to see if the `z` axis does not get mutated\nafter a call to `Axes3D.plot`\n\ntest cases came from GH#8990"
    },
    {
      "name": "test_scatter_masked_color",
      "docstring": "Test color parameter usage with non-finite coordinate arrays.\n\nGH#26236"
    },
    {
      "name": "test_surface3d_zsort_inf",
      "docstring": null
    },
    {
      "name": "test_Poly3DCollection_init_value_error",
      "docstring": null
    },
    {
      "name": "test_ndarray_color_kwargs_value_error",
      "docstring": null
    },
    {
      "name": "f",
      "docstring": null
    },
    {
      "name": "test_simple",
      "docstring": null
    },
    {
      "name": "test_edge_style",
      "docstring": null
    },
    {
      "name": "test_named_colors",
      "docstring": "Test with colors set to a 3D object array of strings."
    },
    {
      "name": "test_rgb_data",
      "docstring": "Test with colors set to a 4d float array of rgb data."
    },
    {
      "name": "test_alpha",
      "docstring": null
    },
    {
      "name": "test_xyz",
      "docstring": null
    },
    {
      "name": "test_calling_conventions",
      "docstring": null
    },
    {
      "name": "get_formatters",
      "docstring": null
    },
    {
      "name": "convert_lim",
      "docstring": "Convert min/max limits to center and range."
    },
    {
      "name": "midpoints",
      "docstring": null
    }
  ],
  "innovations": [
    {
      "type": "potential_innovation",
      "marker": "optimization",
      "context": "        subset = np.ma.masked_array(z, subset, dtype=float)\n\n        # When depth shading is disabled, the colors are passed through as\n        # single-item lists; this triggers single path optimization. The\n        # following reshaping is a hack to disable that, since the optimization\n        # would not occur for the full scatter which has multiple colors.\n        fc = np.repeat(fc, sum(~subset.mask))"
    }
  ]
}