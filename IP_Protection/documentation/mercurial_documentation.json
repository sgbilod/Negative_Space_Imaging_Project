{
  "file_path": "c:\\Users\\sgbil\\OneDrive\\Desktop\\Negative_Space_Imaging_Project\\.venv\\Lib\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
  "classes": [
    {
      "name": "Mercurial",
      "docstring": null,
      "methods": [
        {
          "name": "get_base_rev_args",
          "docstring": null
        },
        {
          "name": "fetch_new",
          "docstring": null
        },
        {
          "name": "switch",
          "docstring": null
        },
        {
          "name": "update",
          "docstring": null
        },
        {
          "name": "get_remote_url",
          "docstring": null
        },
        {
          "name": "get_revision",
          "docstring": "Return the repository-local changeset revision number, as an integer."
        },
        {
          "name": "get_requirement_revision",
          "docstring": "Return the changeset identification hash, as a 40-character\nhexadecimal string"
        },
        {
          "name": "is_commit_id_equal",
          "docstring": "Always assume the versions don't match"
        },
        {
          "name": "get_subdirectory",
          "docstring": "Return the path to Python project root, relative to the repo root.\nReturn None if the project root is in the repo root."
        },
        {
          "name": "get_repository_root",
          "docstring": null
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "get_base_rev_args",
      "docstring": null
    },
    {
      "name": "fetch_new",
      "docstring": null
    },
    {
      "name": "switch",
      "docstring": null
    },
    {
      "name": "update",
      "docstring": null
    },
    {
      "name": "get_remote_url",
      "docstring": null
    },
    {
      "name": "get_revision",
      "docstring": "Return the repository-local changeset revision number, as an integer."
    },
    {
      "name": "get_requirement_revision",
      "docstring": "Return the changeset identification hash, as a 40-character\nhexadecimal string"
    },
    {
      "name": "is_commit_id_equal",
      "docstring": "Always assume the versions don't match"
    },
    {
      "name": "get_subdirectory",
      "docstring": "Return the path to Python project root, relative to the repo root.\nReturn None if the project root is in the repo root."
    },
    {
      "name": "get_repository_root",
      "docstring": null
    }
  ],
  "innovations": []
}