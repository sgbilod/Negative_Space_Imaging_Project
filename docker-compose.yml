version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ~/.aws:/root/.aws:ro
    environment:
      - DEPLOYMENT_ENV=development
      - PYTHONPATH=/app
      - AWS_PROFILE=default
    ports:
      - '8000:8000'
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=negative_space
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  monitoring:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:8.2.0
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  grafana-data:
